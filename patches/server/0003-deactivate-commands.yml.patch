From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Aaron <bauhd@gmx.net>
Date: Thu, 30 May 2024 23:44:30 +0200
Subject: [PATCH] deactivate commands.yml


diff --git a/src/main/java/net/minecraft/server/Main.java b/src/main/java/net/minecraft/server/Main.java
index 244a19ecd0234fa1d7a6ecfea20751595688605d..0bc825b16f768b7700df9cbf219c7c1bdc97becd 100644
--- a/src/main/java/net/minecraft/server/Main.java
+++ b/src/main/java/net/minecraft/server/Main.java
@@ -143,11 +143,11 @@ public class Main {
                 configuration.setDefaults(YamlConfiguration.loadConfiguration(new InputStreamReader(Main.class.getClassLoader().getResourceAsStream("configurations/bukkit.yml"), Charsets.UTF_8)));
                 configuration.save(configFile);
 
-                File commandFile = (File) optionset.valueOf("commands-settings");
+                /*File commandFile = (File) optionset.valueOf("commands-settings");
                 YamlConfiguration commandsConfiguration = YamlConfiguration.loadConfiguration(commandFile);
                 commandsConfiguration.options().copyDefaults(true);
                 commandsConfiguration.setDefaults(YamlConfiguration.loadConfiguration(new InputStreamReader(Main.class.getClassLoader().getResourceAsStream("configurations/commands.yml"), Charsets.UTF_8)));
-                commandsConfiguration.save(commandFile);
+                commandsConfiguration.save(commandFile);*/ // Grinder - deactivate commands.yml
                 // CraftBukkit end
                 Main.LOGGER.info("Initialized '{}' and '{}'", path1.toAbsolutePath(), path2.toAbsolutePath());
                 return;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 3c07954a0a88ab61974b2e45c15ea56e6e86c748..f09318c4cf9ba8319dc9fdc5691cab3fb73cd01d 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -420,13 +420,13 @@ public final class CraftServer implements Server {
         this.configuration = YamlConfiguration.loadConfiguration(this.getConfigFile());
         this.configuration.options().copyDefaults(true);
         this.configuration.setDefaults(YamlConfiguration.loadConfiguration(new InputStreamReader(this.getClass().getClassLoader().getResourceAsStream("configurations/bukkit.yml"), Charsets.UTF_8)));
-        ConfigurationSection legacyAlias = null;
+        /*ConfigurationSection legacyAlias = null;
         if (!this.configuration.isString("aliases")) {
             legacyAlias = this.configuration.getConfigurationSection("aliases");
             this.configuration.set("aliases", "now-in-commands.yml");
-        }
+        }*/
         this.saveConfig();
-        if (this.getCommandsConfigFile().isFile()) {
+        /*if (this.getCommandsConfigFile().isFile()) {
             legacyAlias = null;
         }
         this.commandsConfiguration = YamlConfiguration.loadConfiguration(this.getCommandsConfigFile());
@@ -458,7 +458,7 @@ public final class CraftServer implements Server {
 
         this.saveCommandsConfig();
         this.overrideAllCommandBlockCommands = this.commandsConfiguration.getStringList("command-block-overrides").contains("*");
-        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");
+        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");*/ // Grinder - deactivate commands.yml
         //this.pluginManager.useTimings(this.configuration.getBoolean("settings.plugin-profiling")); // Paper - we already moved this
         this.overrideSpawnLimits();
         console.autosavePeriod = this.configuration.getInt("ticks-per.autosave");
@@ -477,7 +477,7 @@ public final class CraftServer implements Server {
     }
 
     public boolean getCommandBlockOverride(String command) {
-        return this.overrideAllCommandBlockCommands || this.commandsConfiguration.getStringList("command-block-overrides").contains(command);
+        return this.overrideAllCommandBlockCommands /*|| this.commandsConfiguration.getStringList("command-block-overrides").contains(command) // Grinder - deactivate commands.yml*/;
     }
 
     private File getConfigFile() {
@@ -1029,7 +1029,7 @@ public final class CraftServer implements Server {
         org.spigotmc.WatchdogThread.hasStarted = false; // Paper - Disable watchdog early timeout on reload
         this.reloadCount++;
         this.configuration = YamlConfiguration.loadConfiguration(this.getConfigFile());
-        this.commandsConfiguration = YamlConfiguration.loadConfiguration(this.getCommandsConfigFile());
+        // this.commandsConfiguration = YamlConfiguration.loadConfiguration(this.getCommandsConfigFile()); // Grinder - deactivate commands.yml
 
         this.console.settings = new DedicatedServerSettings(this.console.options);
         DedicatedServerProperties config = this.console.settings.getProperties();
@@ -1090,8 +1090,8 @@ public final class CraftServer implements Server {
         this.reloadData();
         org.spigotmc.SpigotConfig.registerCommands(); // Spigot
         io.papermc.paper.command.PaperCommands.registerCommands(this.console); // Paper
-        this.overrideAllCommandBlockCommands = this.commandsConfiguration.getStringList("command-block-overrides").contains("*");
-        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");
+        /*this.overrideAllCommandBlockCommands = this.commandsConfiguration.getStringList("command-block-overrides").contains("*");
+        this.ignoreVanillaPermissions = this.commandsConfiguration.getBoolean("ignore-vanilla-permissions");*/ // Grinder - deactivate commands.yml
 
         int pollCount = 0;
 
@@ -1793,7 +1793,7 @@ public final class CraftServer implements Server {
 
     @Override
     public Map<String, String[]> getCommandAliases() {
-        ConfigurationSection section = this.commandsConfiguration.getConfigurationSection("aliases");
+        /*ConfigurationSection section = this.commandsConfiguration.getConfigurationSection("aliases");
         Map<String, String[]> result = new LinkedHashMap<String, String[]>();
 
         if (section != null) {
@@ -1810,7 +1810,8 @@ public final class CraftServer implements Server {
             }
         }
 
-        return result;
+        return result;*/ // Grinder - deactivate commands.yml
+        return new LinkedHashMap<>();
     }
 
     public void removeBukkitSpawnRadius() {
@@ -3117,7 +3118,7 @@ public final class CraftServer implements Server {
                 .map(key -> key.toLowerCase(java.util.Locale.ENGLISH))
                 .collect(java.util.stream.Collectors.toSet());
         getCommandMap().getKnownCommands().keySet().removeIf(removals::contains);
-        File file = getCommandsConfigFile();
+        /*File file = getCommandsConfigFile();
         try {
             commandsConfiguration.load(file);
         } catch (FileNotFoundException ex) {
@@ -3125,7 +3126,7 @@ public final class CraftServer implements Server {
         } catch (IOException | org.bukkit.configuration.InvalidConfigurationException ex) {
             Bukkit.getLogger().log(Level.SEVERE, "Cannot load " + file, ex);
             return false;
-        }
+        }*/ // Grinder - deactivate commands.yml
         commandMap.registerServerAliases();
         return true;
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 1acc0a579804dee7bb3d0f755c24240413ed7540..2f0e9052f9041d041ca3dc0665cc49ac178703e8 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -127,11 +127,11 @@ public class Main {
                         .defaultsTo(new File("bukkit.yml"))
                         .describedAs("Yml file");
 
-                this.acceptsAll(Main.asList("C", "commands-settings"), "File for command settings")
+                /*this.acceptsAll(Main.asList("C", "commands-settings"), "File for command settings")
                         .withRequiredArg()
                         .ofType(File.class)
                         .defaultsTo(new File("commands.yml"))
-                        .describedAs("Yml file");
+                        .describedAs("Yml file");*/ // Grinder
 
                 this.acceptsAll(Main.asList("forceUpgrade"), "Whether to force a world upgrade");
                 this.acceptsAll(Main.asList("eraseCache"), "Whether to force cache erase during world upgrade");
diff --git a/src/main/resources/configurations/bukkit.yml b/src/main/resources/configurations/bukkit.yml
index ffa67adc26f087cc991b7f59ef1363843849f5f4..3c05f7c3fba89ef0572bbb7d8a0d73365b115849 100644
--- a/src/main/resources/configurations/bukkit.yml
+++ b/src/main/resources/configurations/bukkit.yml
@@ -41,4 +41,3 @@ ticks-per:
     axolotl-spawns: 1
     ambient-spawns: 1
     autosave: 6000
-aliases: now-in-commands.yml
